apiVersion: v1
kind: Namespace
metadata:
    name: dev
    labels:
        name: dev
---
apiVersion: rbac.authorization.k8s.io/v1  # resource que vamos a emplear (roles, ver en kubectl api-resources)
kind: Role
metadata:
  namespace: dev
  name: cm-role
rules:
- apiGroups: [""] # Vease kubectl api-resources. En APIVERSION podemos ver el Group/[version]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cm-role
  namespace: dev
subjects:
- kind: User
  name: jonatan # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role #this must be Role or ClusterRole
  name: cm-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
    namespace: dev
    name: vars
    labels:
        app: front
data:
    db_host: dev.host.local  # nos servir√°n como env vars
    db_user: dev_user

