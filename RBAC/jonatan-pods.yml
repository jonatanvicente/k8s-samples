apiVersion: rbac.authorization.k8s.io/v1  # resource que vamos a emplear (roles, ver en kubectl api-resources)
kind: Role
metadata:
  namespace: default
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group. Como vamos a leer pods, en kubectl api-resources vemos que los pods tienen ApiGroup empty
  resources: ["pods"]
  verbs: ["get", "watch", "list"]  # only reading
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: default
subjects:
# You can specify more than one "subject"
- kind: User
  name: jonatan # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: pod-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
